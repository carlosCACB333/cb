name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Git Semantic Version
        uses: PaulHatch/semantic-version@v5.2.1
        id: version
        with:
          tag_prefix: "v"
          bump_each_commit: true
          version_format: "${major}.${minor}.${patch}-prerelease${increment}"

      - name: Create env file with secrets
        run: |
          echo "" >>.env.cb-back
          echo "" >>.env.cb-front
          echo "" >>.env.cb-back-grpc
          echo "NEXT_PUBLIC_GRAPHCMS_URL=${{ secrets.NEXT_PUBLIC_GRAPHCMS_URL }}" >> .env
          echo "NEXT_PUBLIC_GRAPHCMS_KEY=${{ secrets.NEXT_PUBLIC_GRAPHCMS_KEY }}" >> .env
          echo "NEXT_PUBLIC_GRAPHCMS_TOKEN=${{ secrets.NEXT_PUBLIC_GRAPHCMS_TOKEN }}" >> .env
          echo "NEXT_PUBLIC_GRAPHCMS_MEDIA=${{ secrets.NEXT_PUBLIC_GRAPHCMS_MEDIA }}" >> .env
          echo "AUTHOR_EMAIL=${{ secrets.AUTHOR_EMAIL }}" >> .env
          echo "AUTHOR_PASSWORD=${{ secrets.AUTHOR_PASSWORD }}" >> .env
          echo "REVALIDATE=${{ secrets.REVALIDATE }}" >> .env
          echo "SITE_URL=${{ secrets.SITE_URL }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env
          echo "API_KEY=${{ secrets.API_KEY }}" >> .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          echo "SITE_URL=${{ secrets.SITE_URL }}" >> .env

          echo "BACK_PORT=8081" >> .env
          echo "GRPC_PORT=8086" >> .env
          echo "GRPC_GW_PORT=8087" >> .env
          echo "SOCKET_PORT=8082" >> .env
          echo "FRONT_PORT=3000" >> .env
          echo "STAGE=production" >> .env
          echo "BACK_HOST=cb-back" >> .env
          echo "NATS_HOST=cb-nats" >> .env
          echo "SOCKET_HOST=cb-socket" >> .env
          echo "GRPC_HOST=cb-grpc" >> .env
          echo "FRONT_IMAGE=carloscb8080/cb-front:${{ steps.version.outputs.version }}" >> .env
          echo "BACK_IMAGE=carloscb8080/cb-back:${{ steps.version.outputs.version }}" >> .env
          echo "SOCKET_IMAGE=carloscb8080/cb-socket:${{ steps.version.outputs.version }}" >> .env
          echo "GRPC_IMAGE=carloscb8080/cb-grpc:${{ steps.version.outputs.version }}" >> .env
          echo "REDIS_HOST=cb-redis" >> .env

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build the Docker image
        run: |
          docker compose build

      - name: Push the Docker image
        run: |
          docker compose push
